spooky_ho <- spooky_wrd[(spooky_wrd$word %in% horror),]
spooky_ho <- spooky1[(spooky1$word %in% horror),]
spooky_ho <- horror[(horror %in% spooky1),]
poev <- read.csv('../data/poevocab.csv', as.is = TRUE, header = FALSE)
colnames(poev) <- "vocab"
View(poev)
poev <- read.csv('../data/poevocab.csv', as.is = TRUE, header = FALSE)
colnames(poev) <- "vocab"
poev <- read.csv('../data/poevocab.csv', as.is = TRUE, header = FALSE)
colnames(poev) <- "vocab"
poev <- read.csv('../data/poevocab.csv', as.is = TRUE, header = FALSE)
colnames(poev) <- "vocab"
spooky_poe <- spooky_wrd[(spooky_wrd$word %in% poev,]
spooky_poe <- spooky_wrd[(spooky_wrd$word %in% poev),]
spooky_poe <- spooky1[(spooky1$word %in% poev),]
spooky_poe <- spooky_wrd[(spooky_wrd$word %in% poev),]
View(poev)
spooky_poe <- poev[(poev %in% spooky_wrd$word),]
View(spooky_ndm)
uncom <- spooky_wrd[(spooky_wrd %in% sw_fry_1000),]
uncom <- spooky_wrd[(spooky_wrd %in% function_words),]
ndm <- discourse_markers_alemany[(discourse_markers_alemany %in% spooky1$word),]
# Find discourse markers used in text
spooky_ndm <- spooky1[(spooky1$word %in% discourse_markers_alemany$marker),]
View(spooky_ndm)
View(ndm)
View(spooky_ndm)
words_ndm <- count(group_by(spooky_ndm, word))$word
freqs_ndm <- count(group_by(spooky_ndm, word))$n
head(sort(freqs_ndm, decreasing = TRUE))
png("../figs/Worldcloud_all.png")
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
dev.off()
png("../figs/Worldcloud_all.png")
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
source("../libs/multiplot.R")
source("../lib/multiplot.R")
head(sort(freqs_ndm, decreasing = TRUE))
png("../figs/Worldcloud_all.png")
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
dev.off()
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
ggplot(author_words1) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
spooky_poe <- spooky_wrd[(spooky_wrd %in% horror),]
poevin <- spooky_wrd[(spooky_wrd %in% poev),]
spooky_poe
length(spooky_poe)
poevin
nrow(spooky_poe)
nrow(poevin)
head(hash_lemmas)
lem <- spooky_wrd[(spooky_wrd %in% hash_lemmas$lemma),]
lem <- spooky_wrd[!(spooky_wrd %in% hash_lemmas$lemma),]
head(sentiments)
as <- spooky_wrd[(spooky_wrd %in% spooky_ndm),]
?inner_join
?sentiments
get_sentiments('bing')
get_sentiments('afinn')
sen <- inner_join(spooky_wrd, get_sentiments('afinn'), by="word")
View(sen)
count(sen, author, sentiment)
get_sentiments('nrc')
count(sen, author, sentiment)
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
count(sentiments, author, sentiment)
sentiments <- inner_join(spooky_wrd, get_sentiments('afinn'), by="word")
count(sentiments, author, sentiment)
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
count(sentiments, author, sentiment)
View(sentiments)
sentiments <- sentiments[sentiment=="fear",]
sentiments1 <- sentiments[sentiments$sentiment=="fear",]
View(sentiments1)
sentiments1 <- sentiments[sentiments$sentiment=="fear"&"negative",]
sentiments1 <- sentiments[sentiments$sentiment=="fear"&&"negative",]
sentiments1 <- sentiments[sentiments$sentiment=="fear" %&% "negative",]
sentiments1 <- sentiments[(sentiments$sentiment=="fear","negative"),]
sentiments1 <- sentiments[(sentiments$sentiment=="fear"|"negative"),]
sentiments1 <- sentiments[(sentiments$sentiment==xor("fear","negative"),]
sentiments1 <- sentiments[sentiments$sentiment==xor("fear","negative"),]
sentiments1 <- sentiments[sentiments$sentiment== "fear"|"negative",]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "negative"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "negative"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust"),]
, "anger"
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger","negative"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger","negative"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger","negative"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger"),]
count(sentiments, author, sentiment)
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger"),]
sentiments <- sentiments[sentiments$sentiment== c("sadness","fear","disgust", "anger"),]
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
sentiments <- rbind(sentiments[sentiments$sentiment=="sadness"),], sentiments[sentiments$sentiment=="fear"),],sentiments[sentiments$sentiment=="disgust"),], sentiments[sentiments$sentiment=="anger"),],sentiments[sentiments$sentiment=="negative"),])
sentiments <- rbind(sentiments[sentiments$sentiment=="sadness",], sentiments[sentiments$sentiment=="fear",],sentiments[sentiments$sentiment=="disgust",], sentiments[sentiments$sentiment=="anger",],sentiments[sentiments$sentiment=="negative",])
count(sentiments, author, sentiment)
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = author)) +
facet_wrap(~ sentiment) +
coord_flip() +
theme(legend.position = "none")
ggplot(count(sentiments, author, n)) +
geom_col(aes(sentiment, n, fill = author)) +
facet_wrap(~ sentiment) +
coord_flip() +
theme(legend.position = "none")
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = author)) +
facet_wrap(~ sentiment) +
coord_flip() +
theme(legend.position = "none")
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ sentiment) +
coord_flip() +
theme(legend.position = "none")
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
nrow(sentiments[sentiments$author=="MWS",])
nrow(sentiments[sentiments$author=="EAP",])
nrow(sentiments[sentiments$author=="HPL",])
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
png("../figs/Worldcloud_ndm.png")
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("purple4", "red4", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4", "yellow5", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4", "yellow3", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue3", "yellow3", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue2", "yellow3", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow3", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow1", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow2", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4","blue1", "yellow2", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4","blue1", "yellow2", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1","blue4", "yellow2", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1","blue2","blue4", "yellow2", "black"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow2", "grey"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow2", "grey4"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow2", "grey3"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue1", "yellow2", "grey2"))
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4", "yellow2", "grey2"))
words_ndm_ms <- count(group_by(spooky_ndm, word, author))$word
View(spooky_ndm)
words_ndm_ms <- count(group_by(spooky_ndm, author))$word
words_ndm_ms <- count(group_by(spooky_ndm, word))$author
words_ndm_ms <- count(group_by(spooky_ndm, word))
View(words_ndm_ms)
words_ndm_ms <- count(group_by(spooky_ndm, word, author))
words_ndm_a <- count(group_by(spooky_ndm, word, author))
ggplot(author_words1) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
get_sentiments('nrc')
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
sentiments <- rbind(sentiments[sentiments$sentiment=="sadness",], sentiments[sentiments$sentiment=="fear",],sentiments[sentiments$sentiment=="disgust",], sentiments[sentiments$sentiment=="anger",],sentiments[sentiments$sentiment=="negative",])
count(sentiments, author, sentiment)
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
nrow(sentiments[sentiments$author=="MWS",])
nrow(sentiments[sentiments$author=="EAP",])
nrow(sentiments[sentiments$author=="HPL",])
get_sentiments('nrc')
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
sentiments <- rbind(sentiments[sentiments$sentiment=="negative",], sentiments[sentiments$sentiment=="fear",],sentiments[sentiments$sentiment=="sadness",], sentiments[sentiments$sentiment=="anger",], sentiments[sentiments$sentiment=="disgust",])
count(sentiments, author, sentiment)
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
nrow(sentiments[sentiments$author=="MWS",])
nrow(sentiments[sentiments$author=="EAP",])
nrow(sentiments[sentiments$author=="HPL",])
View(horror)
dict <- read.csv('../data/dict.csv', as.is = TRUE, header = FALSE)
colnames(dict) <- "vocab"
oed <- spooky_wrd[!(spooky_wrd %in% dict),]
oed <- spooky_wrd[(spooky_wrd %in% dict),]
View(spooky_wrd)
oed <- spooky_wrd[!(spooky_wrd$word %in% dict),]
View(dict)
View(dict)
spooky_horror <- spooky_wrd[(spooky_wrd$word %in% horror),]
spooky_poe <- spooky_wrd[(spooky_wrd$word %in% poev),]
nrow(spooky_poe)
View(spooky_wrd)
View(dict)
compare(spooky_wrd, dict, allowAll= TRUE)
library("compare")
install.packages("compare")
library("compare")
compare(spooky_wrd, dict, allowAll= TRUE)
compare(spooky_wrd$word, dict, allowAll= TRUE)
spooky_wrd$word %in% dict
oed <- spooky_wrd[!(spooky_wrd$word %in% intersect(spooky_wrd$word,dict)),]
oed <- spooky_wrd[(spooky_wrd$word %in% dict),]
oed <- spooky_wrd[(spooky_wrd$word %in% intersect(spooky_wrd$word,dict),]
oed <- spooky_wrd[(spooky_wrd$word %in% intersect(spooky_wrd$word,dict)),]
dict[dict %in% spooky_wrd$word]
head(dict[(dict %in% spooky_wrd$word),])
dict[(dict %in% spooky_wrd$word),]
count(dict %in% spooky_wrd$word)
count(spooky_wrd$word %in% dict)
typeof(dict)
typeof(spooky_wrd$word)
typeof(spooky_wrd)
count(spooky_wrd %in% dict)
dict <- as.data.frame(dict)
count(spooky_wrd$word %in% dict)
oed <- spooky_wrd[(spooky_wrd$word %in% dict),]
View(dict)
oed <- spooky1[(spooky1$word %in% dict),]
View(oed)
spooky_horror <- spooky_wrd[spooky_wrd$word %in% horror,]
spooky_poe <- spooky_wrd[spooky_wrd$word %in% poev,]
oed <- spooky_wrd[spooky_wrd$word %in% dict,]
typeof(discourse_markers_alemany)
# Find discourse markers used in text
spooky_ndm <- spooky1[spooky1$word %in% discourse_markers_alemany$marker,]
dict <- as.data.frame(dict)
typeof(dict)
"return" %in% dict
"return" %in% dict$vocab
oed <- spooky_wrd[spooky_wrd$word %in% dict$v,]
oed <- spooky_wrd[spooky_wrd$word %in% dict$vocab,]
spooky_horror <- spooky_wrd[spooky_wrd$word %in% horror$vocab,]
spooky_poe <- spooky_wrd[spooky_wrd$word %in% poev$vocab,]
View(spooky_poe)
spooky_oed <- spooky_wrd[spooky_wrd$word %in% dict$vocab,]
poe_ms <- spooky_poe[spooky_poe$author=="MWS",]
poe_hpl <- spooky_poe[spooky_poe$author=="HPL",]
poe_p <- spooky_poe[spooky_poe$author=="EAP",]
ggplot(spooky_poe) +
geom_bar(aes(author, fill = author)) +
theme(legend.position = "none")
View(spooky_horror)
ggplot(spooky_horro) +
geom_bar(aes(author, fill = author)) +
theme(legend.position = "none")
ggplot(spooky_horror) +
geom_bar(aes(author, fill = author)) +
theme(legend.position = "none")
View(spooky_horror)
# Wordcloud showing most frequently used horror words
words_ho <- count(group_by(spooky_horror, word))$word
freqs_ho <- count(group_by(spooky_horror, word))$n
head(sort(freqs_ho, decreasing = TRUE))
png("../figs/Worldcloud_horror.png")
wordcloud(words_ho, freqs_ho, max.words = 50, color = c("blue4", "yellow2", "grey2"))
dev.off()
# Wordcloud showing most frequently used Poe's words
words_poe <- count(group_by(spooky_poe, word))$word
freqs_poe <- count(group_by(spooky_poe, word))$n
head(sort(freqs_poe, decreasing = TRUE))
head(sort(freqs_poe, decreasing = TRUE))
png("../figs/Worldcloud_poe.png")
wordcloud(words_poe, freqs_poe, max.words = 50, color = c("blue4", "yellow2", "grey2"))
spooky_oed <- spooky_wrd[!spooky_wrd$word %in% dict$vocab,]
ggplot(author_words1) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
View(spooky_oed)
dict <- unnest_tokens(dict, vocab, text)
dict <- unnest_tokens(dict, word, text)
dict <- tolower(dict)
View(dict)
dict <- as.data.frame(tolower(dict))
# https://github.com/dwyl/english-words/blob/master/words.txt
dict <- read.csv('../data/dict.csv', as.is = TRUE, header = FALSE)
dict$vocab <- tolower(dict$vocav)
dict$vocab <- tolower(dict$vocab)
dict$vocab <- tolower(dict$vocab)
levels(dict$vocab) <- tolower(levels(dict$vocab))
View(dict)
colnames(dict) <- "vocab"
levels(dict$vocab) <- tolower(levels(dict$vocab))
levels(dict$vocab) <- tolower(levels(dict$vocab))
View(dict)
dict$vocab <- tolower(dict$vocab)
spooky_oed <- spooky_wrd[!spooky_wrd$word %in% dict$vocab,]
View(spooky_oed)
ggplot(spooky_oed) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
View(spooky_oed)
ggplot(spooky_oed) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author))
ggplot(spooky_oed) +
geom_col(aes(reorder(word, spooky_oed, FUN = min), n, fill = author))
ggplot(spooky_oed) +
geom_col(aes(word, fill = author))
ggplot(spooky_oed) +
geom_col(aes(word,spooky_oed, fill = author))
ggplot(spooky_oed)
ggplot(spooky_oed) +
geom_col(aes(word, spooky_oed, fill=author))
# Wordcloud showing non-OED words
words_oed <- count(group_by(spooky_oed, word))$word
freqs_oed <- count(group_by(spooky_oed, word))$n
head(words_oed)
head(sort(freqs_oed, decreasing = TRUE))
png("../figs/Worldcloud_oed.png")
wordcloud(words_oed, freqs_oed, max.words = 50, color = c("blue4", "yellow2", "grey2"))
View(dict)
# https://github.com/dwyl/english-words/blob/master/words.txt
dict <- read.csv('../data/dict.csv', as.is = TRUE, header = FALSE)
# https://github.com/dwyl/english-words/blob/master/words.txt
dict <- read.csv('../data/dict.csv', as.is = TRUE, header = FALSE)
colnames(dict) <- "vocab"
# https://github.com/dwyl/english-words/blob/master/words.txt
dict <- read.csv('../data/dict.csv', as.is = TRUE, header = FALSE)
colnames(dict) <- "vocab"
dict$vocab <- tolower(dict$vocab)
dict$vocab <- tolower(dict$vocab)
spooky_oed <- spooky_wrd[!spooky_wrd$word %in% dict$vocab,]
# Wordcloud showing non-OED words
words_oed <- count(group_by(spooky_oed, word))$word
freqs_oed <- count(group_by(spooky_oed, word))$n
head(sort(freqs_oed, decreasing = TRUE))
png("../figs/Worldcloud_oed.png")
wordcloud(words_oed, freqs_oed, max.words = 50, color = c("blue4", "yellow2", "grey2"))
dict$vocab <- removeNumbers(dict$vocab)
spooky_oed <- spooky_wrd[!spooky_wrd$word %in% dict$vocab,]
View(spooky_wrd)
spooky_wrd <- iconv(spooky_wrd, 'utf-8','ascii',sub=' ')
# Make a table with one word per row and remove `stop words`
spooky_wrd <- anti_join(spooky1, stop_words, by = "word")
spooky_wrd$word <- iconv(spooky_wrd$word, 'utf-8','ascii',sub=' ')
# Counts number of times each author used each word.
author_oed <- count(group_by(spooky_oed, word, author))
View(author_oed)
# Counts number of times each word was used.
all_oed  <- rename(count(group_by(spooky_oed, word)), all = n1)
# Counts number of times each word was used.
all_oed  <- rename(count(group_by(spooky_oed, word)), all = n)
View(all_oed)
# Counts number of times each author used each word
author_oed <- count(group_by(spooky_oed, word, author))
# Counts number of times each word was used
all_oed  <- rename(count(group_by(spooky_oed, word)), all = n)
author_oed <- left_join(author_oed, all_oed, by = "word")
author_oed <- arrange(author_oed, desc(all))
author_oed <- ungroup(head(author_oed, 81))
ggplot(author_oed) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
author_oed <- ungroup(head(author_oed, 10))
ggplot(author_oed) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
author_oed <- ungroup(top_n(group_by(author_oed, author), 15, author_oed))
author_oed <- ungroup(head(author_oed, 10))
View(author_oed)
author_oed <- ungroup(head(author_oed, 50))
author_oed <- ungroup(top_n(group_by(author_oed, author), 15, author_oed))
author_oed <- ungroup(head(author_oed, 50))
# Counts number of times each author used each word
author_oed <- count(group_by(spooky_oed, word, author))
author_oed <- left_join(author_oed, all_oed, by = "word")
author_oed <- arrange(author_oed, desc(all))
author_oed <- ungroup(head(author_oed, 50))
ggplot(author_oed) +
geom_col(aes(word, all_oed, fill = author)) +
labs(x = NULL, y = "tf-idf") +
theme(legend.position = "none") +
facet_wrap(~ author, ncol = 3, scales = "free") +
coord_flip() +
labs(y = "TF-IDF values")
ggplot(author_oed) +
geom_col(aes(word, n, fill = author)) +
labs(x = NULL, y = "tf-idf") +
theme(legend.position = "none") +
facet_wrap(~ author, ncol = 3, scales = "free") +
coord_flip() +
labs(y = "TF-IDF values")
# Find discourse markers used in text
spooky_ndm <- spooky1[spooky1$word %in% discourse_markers_alemany$marker,]
# Counts total numbers of discourse markers each author used
author_dis <- count(group_by(spooky_ndm, author))
author_dis
# Counts number of times each author used each discourse marker
author_words1 <- count(group_by(spooky_ndm, word, author))
# Counts number of times each marker was used
all_words1    <- rename(count(group_by(spooky_ndm, word)), all = n)
author_words1 <- left_join(author_words1, all_words1, by = "word")
author_words1 <- arrange(author_words1, desc(all))
author_words1 <- ungroup(head(author_words1, 81))
# Make a word cloud for Discourse Markers
words_ndm <- count(group_by(spooky_ndm, word))$word
freqs_ndm <- count(group_by(spooky_ndm, word))$n
head(sort(freqs_ndm, decreasing = TRUE))
png("../figs/Worldcloud_ndm.png")
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4", "yellow2", "grey2"))
dev.off()
ggplot(author_words1) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
png("../figs/ndm.png")
ggplot(author_words1) +
geom_col(aes(reorder(word, all, FUN = min), n, fill = author)) +
xlab(NULL) +
coord_flip() +
facet_wrap(~ author) +
theme(legend.position = "none")
dev.off()
wordcloud(words_ndm, freqs_ndm, max.words = 50, color = c("blue4", "yellow2", "grey2"))
head(sort(freqs_ho, decreasing = TRUE))
png("../figs/Worldcloud_horror.png")
wordcloud(words_ho, freqs_ho, max.words = 50, color = c("blue4", "yellow2", "grey2"))
dev.off()
png("../figs/poe.png")
ggplot(spooky_poe) +
geom_bar(aes(author, fill = author)) +
theme(legend.position = "none")
dev.off()
head(sort(freqs_poe, decreasing = TRUE))
png("../figs/Worldcloud_poe.png")
wordcloud(words_poe, freqs_poe, max.words = 50, color = c("blue4", "yellow2", "grey2"))
dev.off()
png("../figs/horror.png")
ggplot(spooky_horror) +
geom_bar(aes(author, fill = author)) +
theme(legend.position = "none")
dev.off()
head(sort(freqs_oed, decreasing = TRUE))
png("../figs/Worldcloud_oed.png")
wordcloud(words_oed, freqs_oed, max.words = 50, color = c("blue4", "yellow2", "grey2"))
dev.off()
png("../figs/oed.png")
ggplot(author_oed) +
geom_col(aes(word, n, fill = author)) +
labs(x = NULL, y = "tf-idf") +
theme(legend.position = "none") +
facet_wrap(~ author, ncol = 3, scales = "free") +
coord_flip() +
labs(y = "TF-IDF values")
dev.off()
get_sentiments('nrc')
sentiments <- inner_join(spooky_wrd, get_sentiments('nrc'), by="word")
sentiments <- rbind(sentiments[sentiments$sentiment=="negative",], sentiments[sentiments$sentiment=="fear",],sentiments[sentiments$sentiment=="sadness",], sentiments[sentiments$sentiment=="anger",], sentiments[sentiments$sentiment=="disgust",])
count(sentiments, author, sentiment)
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
nrow(sentiments[sentiments$author=="MWS",])
nrow(sentiments[sentiments$author=="EAP",])
nrow(sentiments[sentiments$author=="HPL",])
png("../figs/oed.png")
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
dev.off()
png("../figs/oed.png")
ggplot(author_oed) +
geom_col(aes(word, n, fill = author)) +
labs(x = NULL, y = "tf-idf") +
theme(legend.position = "none") +
facet_wrap(~ author, ncol = 3, scales = "free") +
coord_flip() +
labs(y = "TF-IDF values")
dev.off()
png("../figs/sa.png")
ggplot(count(sentiments, author, sentiment)) +
geom_col(aes(sentiment, n, fill = sentiment)) +
facet_wrap(~ author) +
coord_flip() +
theme(legend.position = "none")
dev.off()
